//>>built
require({cache:{"url:dojorama/ui/release/widget/snippet/template/ReleaseFormSnippet.html":'<form class="form-horizontal" data-dojo-attach-event="onsubmit:_onSubmit">\n    <fieldset>\n        <div data-dojo-attach-point="titleNode"></div>\n        <div data-dojo-attach-point="formatNode"></div>\n        <div data-dojo-attach-point="releaseDateNode"></div>\n        <div data-dojo-attach-point="priceNode"></div>\n        <div data-dojo-attach-point="infoNode"></div>\n        <div data-dojo-attach-point="publishNode"></div>\n        <button data-dojo-attach-point="submitNode">Save</button>\n    </fieldset>\n</form>'}});
define("dojorama/ui/release/widget/snippet/ReleaseFormSnippet","dojo/_base/declare,mijit/_WidgetBase,mijit/_TemplatedMixin,../../../_global/mixin/_ToggleMixin,dojo/_base/array,dojo/_base/lang,dojo/dom-style,dojo/keys,../../../_global/widget/ControlGroupWidget,dobolo/Button,dobolo/DatepickerInput,dojo-form-controls/Textbox,dojo-form-controls/Textarea,dojo-form-controls/Checkbox,dojo-form-controls/Select,dojo-data-model/sync,dojo/text!./template/ReleaseFormSnippet.html,dojo/i18n!./nls/ReleaseFormSnippet".split(","),
function(f,g,h,i,p,c,q,r,b,j,k,d,l,m,n,e,o,a){return f([g,h,i],{releaseModel:null,templateString:o,controlGroupWidgets:{},submitButton:null,submitButtonTimeoutId:null,errorModel:null,postCreate:function(){this.inherited(arguments);this.errorModel=this.releaseModel.getErrorModel();this.hide();this.build()},startup:function(){var a=null;this.inherited(arguments);this.submitButton.startup();for(a in this.releaseModel.getProps())this.releaseModel.getProps().hasOwnProperty(a)&&this.controlGroupWidgets[a]&&
(this.own(e(this.releaseModel,a,this.controlGroupWidgets[a],"value")),this.own(e(this.errorModel,a,this.controlGroupWidgets[a],"error")),this.controlGroupWidgets[a].startup())},destroy:function(){this.inherited(arguments);this.releaseModel.destroy();clearTimeout(this.submitButtonTimeoutId)},_onSubmit:function(a){a.preventDefault();this.submitButton.loading();this.onSubmit()},onSubmit:function(){this.releaseModel.save().then(c.hitch(this,this.cancelSubmitButton),c.hitch(this,this.cancelSubmitButton))},
build:function(){this.controlGroupWidgets.title=new b({label:a.fieldTitleLabel,inputWidget:new d({})},this.titleNode);this.controlGroupWidgets.format=new b({label:a.fieldFormatLabel,inputWidget:new n({options:[{value:"",label:a.fieldFormatOptionLabel},{value:"cd",label:"Cd"},{value:"vinyl",label:"Vinyl"},{value:"digital",label:"Digital",disabled:!0}]})},this.formatNode);this.controlGroupWidgets.releaseDate=new b({label:a.fieldReleaseDateLabel,inputWidget:new k({})},this.releaseDateNode);this.controlGroupWidgets.price=
new b({label:a.fieldPriceLabel,inputWidget:new d({})},this.priceNode);this.controlGroupWidgets.publish=new b({label:a.fieldPublishLabel,inputWidget:new m({}),widgetProperty:"checked"},this.publishNode);this.controlGroupWidgets.info=new b({label:a.fieldInfoLabel,inputWidget:new l({})},this.infoNode);this.submitButton=new j({type:"submit",label:a.submitLabel,loadingText:a.submitBusyLabel,resetText:a.submitLabel,"class":"btn btn-primary"},this.submitNode)},cancelSubmitButton:function(){this.submitButton.reset()}})});